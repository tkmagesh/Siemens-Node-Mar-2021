Total Experience
Primary Skillset
Experience in JavaScript (Any Framework)

What is Node.js?
    Serverside JavaScript
    Framework for building Service applications
    
    
JavaScript Runtime

C
1980 - C++
1995 - Ruby
1997 - Java
1998 - C#

2008 - Node.js

Extremely less resources

Single Threaded Event Loop

A Visitor
    Visitor Ledger
    Gadget Ledger
    Escorted

Courier Guy
    Courier Ledger

Associate
    Temp Badge Ledger


Use Case : 1
    Single Threaded
    Blocking

Use Case : 2
    Multi Threaded
    Blocking

Use Case : 3
    Single Threaded
    Non Blocking
    Event Loop (Scheduler)
    Effective for IO intensive operations (Not suitable for CPU intensive operations)

Use Case : 4
    Non Blocking (UI)
    CPU intensive (multi-threaded)
    Web Workers


Never use setTimeout in Node.js, instead use "setImmediate"

Node.js Module System (CommonJS module)

    - Everything defined in a JS file is considered PRIVATE
    - Public entities have to be explicity exported
    - To use the public entities from other JS files, they have to explicitly imported

Two reasons for exporting a function
    1. to create a factory
    2. to pass the input to the loaded module
    

Async

Multi-threaded
    Resource - More
    Performance - YES

Single-threaded
    Resource - Less
    Performance - No


EventEmitter
Readable Stream, Writable Stream


GET http://localhost:8080 
    => serve index.html

GET http://localhost:8080/index.html 
    => serve index.html

GET http://localhost:8080/abc.html 
    => serve 404

GET http://localhost:8080/calculator-get.html 
    => serve calculator-get.html

GET http://localhost:8080/calculator-post.html 
    => serve calculator-post.html

GET http://localhost:8080/calculator?op=add&x=100&y=200 
    => 300

POST http://localhost:8080/calculator (with req body op=add&x=100&y=200) 
    => 300

GET/POST http://localhost:8080/abc 
    => serve 404

PUT/PATCH/DELETE/OPTIONS/HEAD 
    => 405


http://localhost:8080/index.html

package.json
    manifest file for the application documenting all the metadata information
        - name
        - version
        - description
        - license
        - dependencies
        - devDependencies
        - scripts

npm - node package manager

npm install <package_name>

npm install chalk
npm install nodemon --save-dev

Express - framework for building web applications in node.js
express-generator => setup an express application

